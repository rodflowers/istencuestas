//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace istEncuestasMVC.servMEDAtencionProxy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="servMEDAtencionSoap", Namespace="http://tempuri.org/wsMEDATE/servMEDAtencion")]
    public partial class servMEDAtencion : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback wsValidaEmpSisoOperationCompleted;
        
        private System.Threading.SendOrPostCallback wsValidaEmpOperationCompleted;
        
        private System.Threading.SendOrPostCallback wsTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback wsConsultaAdherenteOperationCompleted;
        
        private System.Threading.SendOrPostCallback wsTraerAtencionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FichaDIATOperationCompleted;
        
        private System.Threading.SendOrPostCallback FichaDIEPOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public servMEDAtencion() {
            this.Url = global::istEncuestasMVC.Properties.Settings.Default.istEncuestasMVC_servMEDAtencionProxy_servMEDAtencion;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event wsValidaEmpSisoCompletedEventHandler wsValidaEmpSisoCompleted;
        
        /// <remarks/>
        public event wsValidaEmpCompletedEventHandler wsValidaEmpCompleted;
        
        /// <remarks/>
        public event wsTokenCompletedEventHandler wsTokenCompleted;
        
        /// <remarks/>
        public event wsConsultaAdherenteCompletedEventHandler wsConsultaAdherenteCompleted;
        
        /// <remarks/>
        public event wsTraerAtencionCompletedEventHandler wsTraerAtencionCompleted;
        
        /// <remarks/>
        public event FichaDIATCompletedEventHandler FichaDIATCompleted;
        
        /// <remarks/>
        public event FichaDIEPCompletedEventHandler FichaDIEPCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsMEDATE/servMEDAtencion/wsValidaEmpSiso", RequestNamespace="http://tempuri.org/wsMEDATE/servMEDAtencion", ResponseNamespace="http://tempuri.org/wsMEDATE/servMEDAtencion", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string wsValidaEmpSiso(string RutEmpresa) {
            object[] results = this.Invoke("wsValidaEmpSiso", new object[] {
                        RutEmpresa});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void wsValidaEmpSisoAsync(string RutEmpresa) {
            this.wsValidaEmpSisoAsync(RutEmpresa, null);
        }
        
        /// <remarks/>
        public void wsValidaEmpSisoAsync(string RutEmpresa, object userState) {
            if ((this.wsValidaEmpSisoOperationCompleted == null)) {
                this.wsValidaEmpSisoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwsValidaEmpSisoOperationCompleted);
            }
            this.InvokeAsync("wsValidaEmpSiso", new object[] {
                        RutEmpresa}, this.wsValidaEmpSisoOperationCompleted, userState);
        }
        
        private void OnwsValidaEmpSisoOperationCompleted(object arg) {
            if ((this.wsValidaEmpSisoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wsValidaEmpSisoCompleted(this, new wsValidaEmpSisoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsMEDATE/servMEDAtencion/wsValidaEmp", RequestNamespace="http://tempuri.org/wsMEDATE/servMEDAtencion", ResponseNamespace="http://tempuri.org/wsMEDATE/servMEDAtencion", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string wsValidaEmp(string RutEmpresa, string Clave) {
            object[] results = this.Invoke("wsValidaEmp", new object[] {
                        RutEmpresa,
                        Clave});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void wsValidaEmpAsync(string RutEmpresa, string Clave) {
            this.wsValidaEmpAsync(RutEmpresa, Clave, null);
        }
        
        /// <remarks/>
        public void wsValidaEmpAsync(string RutEmpresa, string Clave, object userState) {
            if ((this.wsValidaEmpOperationCompleted == null)) {
                this.wsValidaEmpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwsValidaEmpOperationCompleted);
            }
            this.InvokeAsync("wsValidaEmp", new object[] {
                        RutEmpresa,
                        Clave}, this.wsValidaEmpOperationCompleted, userState);
        }
        
        private void OnwsValidaEmpOperationCompleted(object arg) {
            if ((this.wsValidaEmpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wsValidaEmpCompleted(this, new wsValidaEmpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsMEDATE/servMEDAtencion/wsToken", RequestNamespace="http://tempuri.org/wsMEDATE/servMEDAtencion", ResponseNamespace="http://tempuri.org/wsMEDATE/servMEDAtencion", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string wsToken(string RutEmpresa, string Clave) {
            object[] results = this.Invoke("wsToken", new object[] {
                        RutEmpresa,
                        Clave});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void wsTokenAsync(string RutEmpresa, string Clave) {
            this.wsTokenAsync(RutEmpresa, Clave, null);
        }
        
        /// <remarks/>
        public void wsTokenAsync(string RutEmpresa, string Clave, object userState) {
            if ((this.wsTokenOperationCompleted == null)) {
                this.wsTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwsTokenOperationCompleted);
            }
            this.InvokeAsync("wsToken", new object[] {
                        RutEmpresa,
                        Clave}, this.wsTokenOperationCompleted, userState);
        }
        
        private void OnwsTokenOperationCompleted(object arg) {
            if ((this.wsTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wsTokenCompleted(this, new wsTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsMEDATE/servMEDAtencion/wsConsultaAdherente", RequestNamespace="http://tempuri.org/wsMEDATE/servMEDAtencion", ResponseNamespace="http://tempuri.org/wsMEDATE/servMEDAtencion", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string wsConsultaAdherente(string Token, string RutEmpresa) {
            object[] results = this.Invoke("wsConsultaAdherente", new object[] {
                        Token,
                        RutEmpresa});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void wsConsultaAdherenteAsync(string Token, string RutEmpresa) {
            this.wsConsultaAdherenteAsync(Token, RutEmpresa, null);
        }
        
        /// <remarks/>
        public void wsConsultaAdherenteAsync(string Token, string RutEmpresa, object userState) {
            if ((this.wsConsultaAdherenteOperationCompleted == null)) {
                this.wsConsultaAdherenteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwsConsultaAdherenteOperationCompleted);
            }
            this.InvokeAsync("wsConsultaAdherente", new object[] {
                        Token,
                        RutEmpresa}, this.wsConsultaAdherenteOperationCompleted, userState);
        }
        
        private void OnwsConsultaAdherenteOperationCompleted(object arg) {
            if ((this.wsConsultaAdherenteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wsConsultaAdherenteCompleted(this, new wsConsultaAdherenteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsMEDATE/servMEDAtencion/wsTraerAtencion", RequestNamespace="http://tempuri.org/wsMEDATE/servMEDAtencion", ResponseNamespace="http://tempuri.org/wsMEDATE/servMEDAtencion", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string wsTraerAtencion(string Token, string RutEmpresa, string FolAte, string FecIni, string FecFin) {
            object[] results = this.Invoke("wsTraerAtencion", new object[] {
                        Token,
                        RutEmpresa,
                        FolAte,
                        FecIni,
                        FecFin});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void wsTraerAtencionAsync(string Token, string RutEmpresa, string FolAte, string FecIni, string FecFin) {
            this.wsTraerAtencionAsync(Token, RutEmpresa, FolAte, FecIni, FecFin, null);
        }
        
        /// <remarks/>
        public void wsTraerAtencionAsync(string Token, string RutEmpresa, string FolAte, string FecIni, string FecFin, object userState) {
            if ((this.wsTraerAtencionOperationCompleted == null)) {
                this.wsTraerAtencionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwsTraerAtencionOperationCompleted);
            }
            this.InvokeAsync("wsTraerAtencion", new object[] {
                        Token,
                        RutEmpresa,
                        FolAte,
                        FecIni,
                        FecFin}, this.wsTraerAtencionOperationCompleted, userState);
        }
        
        private void OnwsTraerAtencionOperationCompleted(object arg) {
            if ((this.wsTraerAtencionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wsTraerAtencionCompleted(this, new wsTraerAtencionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsMEDATE/servMEDAtencion/FichaDIAT", RequestNamespace="http://tempuri.org/wsMEDATE/servMEDAtencion", ResponseNamespace="http://tempuri.org/wsMEDATE/servMEDAtencion", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FichaDIAT(
                    string Token, 
                    string RutEmpleador, 
                    string FolioAtencion, 
                    string CodigoDelCaso, 
                    string TipoDeIngreso, 
                    string FechaDeEmision, 
                    string CategoriaOcupacional, 
                    string TipoDeContrato, 
                    string FechaDelAccidente, 
                    string Etnia, 
                    string EtniaOtro, 
                    string HoraDelAccidente, 
                    string HoraDeIngresoAlTrabajo, 
                    string HoraDeSalidaDelTrabajo, 
                    string DireccionDelAccidente, 
                    string ComunaDelAccidente, 
                    string QueHaciaElTrabajadorAlMomentoDelAccidente, 
                    string LugarDelAccidente, 
                    string NumeroDeTrabajadoresHombres, 
                    string NumeroDeTrabajadoresMujeres, 
                    string DescribaComoOcurrioElAccidente, 
                    string SeñaleCualEraSuTrabajoHabitual, 
                    string DesarrollabaSuTrabajoHabitual, 
                    string ClasificacionDelAccidente, 
                    string TipoDeAccidente, 
                    string TipoDeAccidenteDeTrayecto, 
                    string MedioDePrueba, 
                    string DetalleDelMedioDePrueba, 
                    string NombreCompletoDelDenunciante, 
                    string NumeroDeTelefonoDelDenunciante, 
                    string ClasificacionDelDenuncianteSegunLey) {
            object[] results = this.Invoke("FichaDIAT", new object[] {
                        Token,
                        RutEmpleador,
                        FolioAtencion,
                        CodigoDelCaso,
                        TipoDeIngreso,
                        FechaDeEmision,
                        CategoriaOcupacional,
                        TipoDeContrato,
                        FechaDelAccidente,
                        Etnia,
                        EtniaOtro,
                        HoraDelAccidente,
                        HoraDeIngresoAlTrabajo,
                        HoraDeSalidaDelTrabajo,
                        DireccionDelAccidente,
                        ComunaDelAccidente,
                        QueHaciaElTrabajadorAlMomentoDelAccidente,
                        LugarDelAccidente,
                        NumeroDeTrabajadoresHombres,
                        NumeroDeTrabajadoresMujeres,
                        DescribaComoOcurrioElAccidente,
                        SeñaleCualEraSuTrabajoHabitual,
                        DesarrollabaSuTrabajoHabitual,
                        ClasificacionDelAccidente,
                        TipoDeAccidente,
                        TipoDeAccidenteDeTrayecto,
                        MedioDePrueba,
                        DetalleDelMedioDePrueba,
                        NombreCompletoDelDenunciante,
                        NumeroDeTelefonoDelDenunciante,
                        ClasificacionDelDenuncianteSegunLey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FichaDIATAsync(
                    string Token, 
                    string RutEmpleador, 
                    string FolioAtencion, 
                    string CodigoDelCaso, 
                    string TipoDeIngreso, 
                    string FechaDeEmision, 
                    string CategoriaOcupacional, 
                    string TipoDeContrato, 
                    string FechaDelAccidente, 
                    string Etnia, 
                    string EtniaOtro, 
                    string HoraDelAccidente, 
                    string HoraDeIngresoAlTrabajo, 
                    string HoraDeSalidaDelTrabajo, 
                    string DireccionDelAccidente, 
                    string ComunaDelAccidente, 
                    string QueHaciaElTrabajadorAlMomentoDelAccidente, 
                    string LugarDelAccidente, 
                    string NumeroDeTrabajadoresHombres, 
                    string NumeroDeTrabajadoresMujeres, 
                    string DescribaComoOcurrioElAccidente, 
                    string SeñaleCualEraSuTrabajoHabitual, 
                    string DesarrollabaSuTrabajoHabitual, 
                    string ClasificacionDelAccidente, 
                    string TipoDeAccidente, 
                    string TipoDeAccidenteDeTrayecto, 
                    string MedioDePrueba, 
                    string DetalleDelMedioDePrueba, 
                    string NombreCompletoDelDenunciante, 
                    string NumeroDeTelefonoDelDenunciante, 
                    string ClasificacionDelDenuncianteSegunLey) {
            this.FichaDIATAsync(Token, RutEmpleador, FolioAtencion, CodigoDelCaso, TipoDeIngreso, FechaDeEmision, CategoriaOcupacional, TipoDeContrato, FechaDelAccidente, Etnia, EtniaOtro, HoraDelAccidente, HoraDeIngresoAlTrabajo, HoraDeSalidaDelTrabajo, DireccionDelAccidente, ComunaDelAccidente, QueHaciaElTrabajadorAlMomentoDelAccidente, LugarDelAccidente, NumeroDeTrabajadoresHombres, NumeroDeTrabajadoresMujeres, DescribaComoOcurrioElAccidente, SeñaleCualEraSuTrabajoHabitual, DesarrollabaSuTrabajoHabitual, ClasificacionDelAccidente, TipoDeAccidente, TipoDeAccidenteDeTrayecto, MedioDePrueba, DetalleDelMedioDePrueba, NombreCompletoDelDenunciante, NumeroDeTelefonoDelDenunciante, ClasificacionDelDenuncianteSegunLey, null);
        }
        
        /// <remarks/>
        public void FichaDIATAsync(
                    string Token, 
                    string RutEmpleador, 
                    string FolioAtencion, 
                    string CodigoDelCaso, 
                    string TipoDeIngreso, 
                    string FechaDeEmision, 
                    string CategoriaOcupacional, 
                    string TipoDeContrato, 
                    string FechaDelAccidente, 
                    string Etnia, 
                    string EtniaOtro, 
                    string HoraDelAccidente, 
                    string HoraDeIngresoAlTrabajo, 
                    string HoraDeSalidaDelTrabajo, 
                    string DireccionDelAccidente, 
                    string ComunaDelAccidente, 
                    string QueHaciaElTrabajadorAlMomentoDelAccidente, 
                    string LugarDelAccidente, 
                    string NumeroDeTrabajadoresHombres, 
                    string NumeroDeTrabajadoresMujeres, 
                    string DescribaComoOcurrioElAccidente, 
                    string SeñaleCualEraSuTrabajoHabitual, 
                    string DesarrollabaSuTrabajoHabitual, 
                    string ClasificacionDelAccidente, 
                    string TipoDeAccidente, 
                    string TipoDeAccidenteDeTrayecto, 
                    string MedioDePrueba, 
                    string DetalleDelMedioDePrueba, 
                    string NombreCompletoDelDenunciante, 
                    string NumeroDeTelefonoDelDenunciante, 
                    string ClasificacionDelDenuncianteSegunLey, 
                    object userState) {
            if ((this.FichaDIATOperationCompleted == null)) {
                this.FichaDIATOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFichaDIATOperationCompleted);
            }
            this.InvokeAsync("FichaDIAT", new object[] {
                        Token,
                        RutEmpleador,
                        FolioAtencion,
                        CodigoDelCaso,
                        TipoDeIngreso,
                        FechaDeEmision,
                        CategoriaOcupacional,
                        TipoDeContrato,
                        FechaDelAccidente,
                        Etnia,
                        EtniaOtro,
                        HoraDelAccidente,
                        HoraDeIngresoAlTrabajo,
                        HoraDeSalidaDelTrabajo,
                        DireccionDelAccidente,
                        ComunaDelAccidente,
                        QueHaciaElTrabajadorAlMomentoDelAccidente,
                        LugarDelAccidente,
                        NumeroDeTrabajadoresHombres,
                        NumeroDeTrabajadoresMujeres,
                        DescribaComoOcurrioElAccidente,
                        SeñaleCualEraSuTrabajoHabitual,
                        DesarrollabaSuTrabajoHabitual,
                        ClasificacionDelAccidente,
                        TipoDeAccidente,
                        TipoDeAccidenteDeTrayecto,
                        MedioDePrueba,
                        DetalleDelMedioDePrueba,
                        NombreCompletoDelDenunciante,
                        NumeroDeTelefonoDelDenunciante,
                        ClasificacionDelDenuncianteSegunLey}, this.FichaDIATOperationCompleted, userState);
        }
        
        private void OnFichaDIATOperationCompleted(object arg) {
            if ((this.FichaDIATCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FichaDIATCompleted(this, new FichaDIATCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsMEDATE/servMEDAtencion/FichaDIEP", RequestNamespace="http://tempuri.org/wsMEDATE/servMEDAtencion", ResponseNamespace="http://tempuri.org/wsMEDATE/servMEDAtencion", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FichaDIEP(
                    string Token, 
                    string RutEmpleador, 
                    string FolioAtencion, 
                    string CodigoDelCaso, 
                    string FechaDeEmision, 
                    string NumeroDeTrabajadoresHombres, 
                    string NumeroDeTrabajadoresMujeres, 
                    string Etnia, 
                    string EtniaOtro, 
                    string TipoDeContrato, 
                    string TipoDeIngreso, 
                    string CategoriaOcupacional, 
                    string DescribaLasMolestiasosintomasqueactualmentetieneeltrabajador, 
                    string HaceCuantoTiempoTieneEstasMolestias, 
                    string HabiaTenidoEstasMolestiasAnteriormente, 
                    string ParteDelCuerpoAfectada, 
                    string DescribaElTrabajoOActividadQueRealizabaCuandoComenzaronLasMolestias, 
                    string NombreDelPuestoDeTrabajoQueRealizabaCuandoComenzaronLasMolestias, 
                    string ExistenCompañerosDeTrabajoConLasMismasMolestias, 
                    string QueAgentesDelTrabajoCreeUdQueCausanLasMolestias, 
                    string CuantoTiempoHaEstadoExpuestoAEstosAgentes, 
                    string NombreCompletoDelDenunciante, 
                    string NumeroDeTelefonoDelDenunciante, 
                    string ClasificacionDelDenuncianteSegunLey) {
            object[] results = this.Invoke("FichaDIEP", new object[] {
                        Token,
                        RutEmpleador,
                        FolioAtencion,
                        CodigoDelCaso,
                        FechaDeEmision,
                        NumeroDeTrabajadoresHombres,
                        NumeroDeTrabajadoresMujeres,
                        Etnia,
                        EtniaOtro,
                        TipoDeContrato,
                        TipoDeIngreso,
                        CategoriaOcupacional,
                        DescribaLasMolestiasosintomasqueactualmentetieneeltrabajador,
                        HaceCuantoTiempoTieneEstasMolestias,
                        HabiaTenidoEstasMolestiasAnteriormente,
                        ParteDelCuerpoAfectada,
                        DescribaElTrabajoOActividadQueRealizabaCuandoComenzaronLasMolestias,
                        NombreDelPuestoDeTrabajoQueRealizabaCuandoComenzaronLasMolestias,
                        ExistenCompañerosDeTrabajoConLasMismasMolestias,
                        QueAgentesDelTrabajoCreeUdQueCausanLasMolestias,
                        CuantoTiempoHaEstadoExpuestoAEstosAgentes,
                        NombreCompletoDelDenunciante,
                        NumeroDeTelefonoDelDenunciante,
                        ClasificacionDelDenuncianteSegunLey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FichaDIEPAsync(
                    string Token, 
                    string RutEmpleador, 
                    string FolioAtencion, 
                    string CodigoDelCaso, 
                    string FechaDeEmision, 
                    string NumeroDeTrabajadoresHombres, 
                    string NumeroDeTrabajadoresMujeres, 
                    string Etnia, 
                    string EtniaOtro, 
                    string TipoDeContrato, 
                    string TipoDeIngreso, 
                    string CategoriaOcupacional, 
                    string DescribaLasMolestiasosintomasqueactualmentetieneeltrabajador, 
                    string HaceCuantoTiempoTieneEstasMolestias, 
                    string HabiaTenidoEstasMolestiasAnteriormente, 
                    string ParteDelCuerpoAfectada, 
                    string DescribaElTrabajoOActividadQueRealizabaCuandoComenzaronLasMolestias, 
                    string NombreDelPuestoDeTrabajoQueRealizabaCuandoComenzaronLasMolestias, 
                    string ExistenCompañerosDeTrabajoConLasMismasMolestias, 
                    string QueAgentesDelTrabajoCreeUdQueCausanLasMolestias, 
                    string CuantoTiempoHaEstadoExpuestoAEstosAgentes, 
                    string NombreCompletoDelDenunciante, 
                    string NumeroDeTelefonoDelDenunciante, 
                    string ClasificacionDelDenuncianteSegunLey) {
            this.FichaDIEPAsync(Token, RutEmpleador, FolioAtencion, CodigoDelCaso, FechaDeEmision, NumeroDeTrabajadoresHombres, NumeroDeTrabajadoresMujeres, Etnia, EtniaOtro, TipoDeContrato, TipoDeIngreso, CategoriaOcupacional, DescribaLasMolestiasosintomasqueactualmentetieneeltrabajador, HaceCuantoTiempoTieneEstasMolestias, HabiaTenidoEstasMolestiasAnteriormente, ParteDelCuerpoAfectada, DescribaElTrabajoOActividadQueRealizabaCuandoComenzaronLasMolestias, NombreDelPuestoDeTrabajoQueRealizabaCuandoComenzaronLasMolestias, ExistenCompañerosDeTrabajoConLasMismasMolestias, QueAgentesDelTrabajoCreeUdQueCausanLasMolestias, CuantoTiempoHaEstadoExpuestoAEstosAgentes, NombreCompletoDelDenunciante, NumeroDeTelefonoDelDenunciante, ClasificacionDelDenuncianteSegunLey, null);
        }
        
        /// <remarks/>
        public void FichaDIEPAsync(
                    string Token, 
                    string RutEmpleador, 
                    string FolioAtencion, 
                    string CodigoDelCaso, 
                    string FechaDeEmision, 
                    string NumeroDeTrabajadoresHombres, 
                    string NumeroDeTrabajadoresMujeres, 
                    string Etnia, 
                    string EtniaOtro, 
                    string TipoDeContrato, 
                    string TipoDeIngreso, 
                    string CategoriaOcupacional, 
                    string DescribaLasMolestiasosintomasqueactualmentetieneeltrabajador, 
                    string HaceCuantoTiempoTieneEstasMolestias, 
                    string HabiaTenidoEstasMolestiasAnteriormente, 
                    string ParteDelCuerpoAfectada, 
                    string DescribaElTrabajoOActividadQueRealizabaCuandoComenzaronLasMolestias, 
                    string NombreDelPuestoDeTrabajoQueRealizabaCuandoComenzaronLasMolestias, 
                    string ExistenCompañerosDeTrabajoConLasMismasMolestias, 
                    string QueAgentesDelTrabajoCreeUdQueCausanLasMolestias, 
                    string CuantoTiempoHaEstadoExpuestoAEstosAgentes, 
                    string NombreCompletoDelDenunciante, 
                    string NumeroDeTelefonoDelDenunciante, 
                    string ClasificacionDelDenuncianteSegunLey, 
                    object userState) {
            if ((this.FichaDIEPOperationCompleted == null)) {
                this.FichaDIEPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFichaDIEPOperationCompleted);
            }
            this.InvokeAsync("FichaDIEP", new object[] {
                        Token,
                        RutEmpleador,
                        FolioAtencion,
                        CodigoDelCaso,
                        FechaDeEmision,
                        NumeroDeTrabajadoresHombres,
                        NumeroDeTrabajadoresMujeres,
                        Etnia,
                        EtniaOtro,
                        TipoDeContrato,
                        TipoDeIngreso,
                        CategoriaOcupacional,
                        DescribaLasMolestiasosintomasqueactualmentetieneeltrabajador,
                        HaceCuantoTiempoTieneEstasMolestias,
                        HabiaTenidoEstasMolestiasAnteriormente,
                        ParteDelCuerpoAfectada,
                        DescribaElTrabajoOActividadQueRealizabaCuandoComenzaronLasMolestias,
                        NombreDelPuestoDeTrabajoQueRealizabaCuandoComenzaronLasMolestias,
                        ExistenCompañerosDeTrabajoConLasMismasMolestias,
                        QueAgentesDelTrabajoCreeUdQueCausanLasMolestias,
                        CuantoTiempoHaEstadoExpuestoAEstosAgentes,
                        NombreCompletoDelDenunciante,
                        NumeroDeTelefonoDelDenunciante,
                        ClasificacionDelDenuncianteSegunLey}, this.FichaDIEPOperationCompleted, userState);
        }
        
        private void OnFichaDIEPOperationCompleted(object arg) {
            if ((this.FichaDIEPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FichaDIEPCompleted(this, new FichaDIEPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void wsValidaEmpSisoCompletedEventHandler(object sender, wsValidaEmpSisoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wsValidaEmpSisoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wsValidaEmpSisoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void wsValidaEmpCompletedEventHandler(object sender, wsValidaEmpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wsValidaEmpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wsValidaEmpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void wsTokenCompletedEventHandler(object sender, wsTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wsTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wsTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void wsConsultaAdherenteCompletedEventHandler(object sender, wsConsultaAdherenteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wsConsultaAdherenteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wsConsultaAdherenteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void wsTraerAtencionCompletedEventHandler(object sender, wsTraerAtencionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wsTraerAtencionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wsTraerAtencionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void FichaDIATCompletedEventHandler(object sender, FichaDIATCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FichaDIATCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FichaDIATCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void FichaDIEPCompletedEventHandler(object sender, FichaDIEPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FichaDIEPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FichaDIEPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591